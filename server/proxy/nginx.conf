server {
  listen 80;
  server_name api.yinsh.net;
  server_tokens off;
    
    # redirect vanilla HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }

    # handles checks on HTTP (AWS)
    location /health-status {
        return 200;
    }

    # for SSL validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {

  listen 443 ssl;
  server_name api.yinsh.net;
  server_tokens off;

  # path to certificate and key
  ssl_certificate /etc/letsencrypt/live/api.yinsh.net/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.yinsh.net/privkey.pem;

  # best practice to add these for Let's Encrypt <> NGINX
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    location / {

        # redirect traffic to backend service running on docker (via HTTP)
        proxy_pass http://backend:6091;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

}


